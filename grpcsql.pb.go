// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sqlpb/grpcsql.proto

package sqlpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Company struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Creator              string   `protobuf:"bytes,3,opt,name=Creator,proto3" json:"Creator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Company) Reset()         { *m = Company{} }
func (m *Company) String() string { return proto.CompactTextString(m) }
func (*Company) ProtoMessage()    {}
func (*Company) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f4a6ba6e6659ca, []int{0}
}
func (m *Company) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Company.Unmarshal(m, b)
}
func (m *Company) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Company.Marshal(b, m, deterministic)
}
func (m *Company) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Company.Merge(m, src)
}
func (m *Company) XXX_Size() int {
	return xxx_messageInfo_Company.Size(m)
}
func (m *Company) XXX_DiscardUnknown() {
	xxx_messageInfo_Company.DiscardUnknown(m)
}

var xxx_messageInfo_Company proto.InternalMessageInfo

func (m *Company) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Company) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Company) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type CompanyName struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompanyName) Reset()         { *m = CompanyName{} }
func (m *CompanyName) String() string { return proto.CompactTextString(m) }
func (*CompanyName) ProtoMessage()    {}
func (*CompanyName) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f4a6ba6e6659ca, []int{1}
}
func (m *CompanyName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompanyName.Unmarshal(m, b)
}
func (m *CompanyName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompanyName.Marshal(b, m, deterministic)
}
func (m *CompanyName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyName.Merge(m, src)
}
func (m *CompanyName) XXX_Size() int {
	return xxx_messageInfo_CompanyName.Size(m)
}
func (m *CompanyName) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyName.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyName proto.InternalMessageInfo

func (m *CompanyName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CompanyId struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompanyId) Reset()         { *m = CompanyId{} }
func (m *CompanyId) String() string { return proto.CompactTextString(m) }
func (*CompanyId) ProtoMessage()    {}
func (*CompanyId) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f4a6ba6e6659ca, []int{2}
}
func (m *CompanyId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompanyId.Unmarshal(m, b)
}
func (m *CompanyId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompanyId.Marshal(b, m, deterministic)
}
func (m *CompanyId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyId.Merge(m, src)
}
func (m *CompanyId) XXX_Size() int {
	return xxx_messageInfo_CompanyId.Size(m)
}
func (m *CompanyId) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyId.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyId proto.InternalMessageInfo

func (m *CompanyId) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type CompanyCreator struct {
	Creator              string   `protobuf:"bytes,1,opt,name=Creator,proto3" json:"Creator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompanyCreator) Reset()         { *m = CompanyCreator{} }
func (m *CompanyCreator) String() string { return proto.CompactTextString(m) }
func (*CompanyCreator) ProtoMessage()    {}
func (*CompanyCreator) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f4a6ba6e6659ca, []int{3}
}
func (m *CompanyCreator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompanyCreator.Unmarshal(m, b)
}
func (m *CompanyCreator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompanyCreator.Marshal(b, m, deterministic)
}
func (m *CompanyCreator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyCreator.Merge(m, src)
}
func (m *CompanyCreator) XXX_Size() int {
	return xxx_messageInfo_CompanyCreator.Size(m)
}
func (m *CompanyCreator) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyCreator.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyCreator proto.InternalMessageInfo

func (m *CompanyCreator) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*Company)(nil), "sql.Company")
	proto.RegisterType((*CompanyName)(nil), "sql.CompanyName")
	proto.RegisterType((*CompanyId)(nil), "sql.CompanyId")
	proto.RegisterType((*CompanyCreator)(nil), "sql.CompanyCreator")
}

func init() { proto.RegisterFile("sqlpb/grpcsql.proto", fileDescriptor_18f4a6ba6e6659ca) }

var fileDescriptor_18f4a6ba6e6659ca = []byte{
	// 193 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x2e, 0xcc, 0x29,
	0x48, 0xd2, 0x4f, 0x2f, 0x2a, 0x48, 0x2e, 0x2e, 0xcc, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x2e, 0x2e, 0xcc, 0x51, 0x72, 0xe7, 0x62, 0x77, 0xce, 0xcf, 0x2d, 0x48, 0xcc, 0xab, 0x14,
	0xe2, 0xe3, 0x62, 0xf2, 0x74, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0xf2, 0x74, 0x11,
	0x12, 0xe2, 0x62, 0xf1, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x02, 0x8b, 0x80, 0xd9, 0x42, 0x12, 0x5c,
	0xec, 0xce, 0x45, 0xa9, 0x89, 0x25, 0xf9, 0x45, 0x12, 0xcc, 0x60, 0x61, 0x18, 0x57, 0x49, 0x91,
	0x8b, 0x1b, 0x6a, 0x10, 0x58, 0x21, 0x4c, 0x33, 0x23, 0x42, 0xb3, 0x92, 0x34, 0x17, 0x27, 0x54,
	0x89, 0x67, 0x0a, 0xba, 0x6d, 0x4a, 0x5a, 0x5c, 0x7c, 0x50, 0x49, 0xa8, 0x89, 0xc8, 0x76, 0x31,
	0xa2, 0xd8, 0x65, 0x64, 0xc7, 0xc5, 0x15, 0x5c, 0x98, 0x13, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c,
	0x2a, 0x64, 0xc0, 0xc5, 0xe7, 0x9e, 0x5a, 0x02, 0xd5, 0xec, 0x04, 0x36, 0x5b, 0x0f, 0xe4, 0x4b,
	0xb8, 0x5d, 0x52, 0x3c, 0xc8, 0x7c, 0x25, 0x06, 0x27, 0xf6, 0x28, 0x56, 0x70, 0x80, 0x24, 0xb1,
	0x81, 0x43, 0xc2, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x4c, 0x1f, 0x77, 0x20, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SqlServiceClient is the client API for SqlService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SqlServiceClient interface {
	GetCompanyById(ctx context.Context, in *CompanyId, opts ...grpc.CallOption) (*Company, error)
}

type sqlServiceClient struct {
	cc *grpc.ClientConn
}

func NewSqlServiceClient(cc *grpc.ClientConn) SqlServiceClient {
	return &sqlServiceClient{cc}
}

func (c *sqlServiceClient) GetCompanyById(ctx context.Context, in *CompanyId, opts ...grpc.CallOption) (*Company, error) {
	out := new(Company)
	err := c.cc.Invoke(ctx, "/sql.SqlService/GetCompanyById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SqlServiceServer is the server API for SqlService service.
type SqlServiceServer interface {
	GetCompanyById(context.Context, *CompanyId) (*Company, error)
}

// UnimplementedSqlServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSqlServiceServer struct {
}

func (*UnimplementedSqlServiceServer) GetCompanyById(ctx context.Context, req *CompanyId) (*Company, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompanyById not implemented")
}

func RegisterSqlServiceServer(s *grpc.Server, srv SqlServiceServer) {
	s.RegisterService(&_SqlService_serviceDesc, srv)
}

func _SqlService_GetCompanyById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompanyId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SqlServiceServer).GetCompanyById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sql.SqlService/GetCompanyById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SqlServiceServer).GetCompanyById(ctx, req.(*CompanyId))
	}
	return interceptor(ctx, in, info, handler)
}

var _SqlService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sql.SqlService",
	HandlerType: (*SqlServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCompanyById",
			Handler:    _SqlService_GetCompanyById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sqlpb/grpcsql.proto",
}
